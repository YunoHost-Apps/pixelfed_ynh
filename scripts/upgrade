#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

ynh_app_setting_set_default --key=php_upload_max_filesize --value=100M

#=================================================
# STOP SUPERVISOR SERVICE
#=================================================
ynh_script_progression "Stopping a supervisor service..."

ynh_supervisor_action --service="${app}-horizon" --action="stop" --log_path="systemd" --wait_until="stopped: ${app}-horizon"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# If fpm_footprint doesn't exist, create it
if [ -z "${fpm_footprint:-}" ]; then
    fpm_footprint=low
#REMOVEME? Everything about fpm_footprint is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_footprint --value=$fpm_footprint
fi

# If fpm_free_footprint doesn't exist, create it
if [ -z "${fpm_free_footprint:-}" ]; then
    fpm_free_footprint=0
#REMOVEME? Everything about fpm_free_footprint is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_free_footprint --value=$fpm_free_footprint
fi

# If fpm_usage doesn't exist, create it
if [ -z "${fpm_usage:-}" ]; then
    fpm_usage=low
#REMOVEME? Everything about fpm_usage is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_usage --value=$fpm_usage
fi

# If app_key doesn't exist, retrieve it
if [ -z "${app_key:-}" ]; then
	ynh_script_progression "Retrieving app_key..."
	app_key=$(grep -oP "APP_KEY=\Kbase64.*" "$install_dir/.env")
	ynh_app_setting_set --key=app_key --value="$app_key"
fi

if dpkg --compare-versions "0.9.0~ynh3" gt "$(ynh_read_manifest --key="version" || echo 1.0)" ; then
	ynh_script_progression "Ensuring upgrade compatibility to 0.9.0~ynh3..."

	ynh_script_progression "Configuring $app's systemd service..."
	ynh_config_add_systemd --service="${app}-horizon" --template=horizon.conf
fi

if dpkg --compare-versions "0.10.9~ynh2" gt "$(ynh_read_manifest --key="version" || echo 1.0)" ; then
	ynh_script_progression "Ensuring upgrade compatibility to 0.10.9~ynh2..."

	ynh_script_progression "Stopping and removing the systemd service..."
	ynh_config_remove_systemd"${app}-horizon"

	ynh_script_progression "Creating log file..."
	mkdir -p "/var/log/$app/"
	touch "/var/log/$app/${app}-horizon.log"
	#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app: "/var/log/$app/"

	ynh_script_progression "Configuring a supervisor service..."
	ynh_add_supervisor_config --service="${app}-horizon" --template=horizon.conf

	ynh_script_progression "Starting a supervisor service..."
	ynh_supervisor_action --service="${app}-horizon" --action="start" --log_path="systemd" --wait_until="success: ${app}-horizon"
fi

if dpkg --compare-versions "0.10.9~ynh3" gt "$(ynh_read_manifest --key="version" || echo 1.0)" ; then
	ynh_script_progression "Ensuring upgrade compatibility to 0.10.9~ynh3..."

	if ynh_hide_warnings yunohost service status ${app}-horizon >/dev/null
	then
		ynh_script_progression "Removing ${app}-horizon service..."
		yunohost service remove "${app}-horizon"
	fi

	ynh_script_progression "Integrating service in YunoHost..."
	yunohost service add "supervisor" --description="Supervisor daemon for $app" --log="/var/log/$app/${app}-horizon.log"
fi

# Fix old email configs
if ynh_app_upgrading_from_version_before 0.11.8~ynh5 ; then
	ynh_replace_regex --match="MAIL_DRIVER=[^\\n]*" --replace="MAIL_DRIVER=sendmail" --file="$install_dir/.env" # two \\ because it's in a ""
	ynh_replace_regex --match="MAIL_HOST=[^\\n]*" --replace="MAIL_HOST=127.0.0.1" --file="$install_dir/.env" # two \\ because it's in a ""
	ynh_replace_regex --match="MAIL_USERNAME=[^\\n]*" --replace="MAIL_USERNAME=$app" --file="$install_dir/.env" # two \\ because it's in a ""
	ynh_replace_regex --match="MAIL_PASSWORD=[^\\n]*" --replace="MAIL_PASSWORD=$mail_pwd" --file="$install_dir/.env" # two \\ because it's in a ""
	ynh_replace_regex --match="MAIL_FROM_ADDRESS=pixelfed" --replace=`MAIL_FROM_ADDRESS="$app"` --file="$install_dir/.env"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
	ynh_script_progression "Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --keep=".env"
fi

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
# Pixelfed app should be able to edit its settings from the admin panel
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 600 "$install_dir"/.env

#=================================================
# PATCHING SOURCE
#=================================================
ynh_script_progression "Patching source files..."

# Prevent privilege escalation by injecting commands in an email name
# This described in more detail on the manpage https://www.postfix.org/sendmail.1.html under security
ynh_replace --match="'/usr/sbin/sendmail -bs'" --replace="'/usr/sbin/sendmail -bs -- '" --file=$install_dir/config/mail.php

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression "Upgrading PHP-FPM configuration..."

# Create a dedicated PHP-FPM config
ynh_config_add_phpfpm # FIXMEhelpers2.1 : --group=www-data to be replaced with php_group=www-data to be added in _common.sh

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_config_add_nginx

#=================================================
# UPDATE COMPOSER DEPENDENCIES
#=================================================
ynh_script_progression "Updating composer..."

ynh_composer_exec self-update --2

ynh_composer_exec update

#=================================================
# PATCH PERMISSIONS for v0.11.5 versions and higher
#=================================================
ynh_script_progression "Patching permissions (for version 0.11.5 and newer)..."

# Default configuration doesn't work
ynh_replace --match="'private' => 0700," --replace="'private' => 0750," --file=$install_dir/config/filesystems.php

# Repair permissions for files created after v0.11.5 and before this patch
if [ -d "$install_dir/public/storage/m/_v2/" ]; then
  chmod 750 -R "$install_dir/public/storage/m/_v2/"* # all files subdirectories (picture folders) should be readable and executable. But if there is no picture, there is no /*/*
  chmod 770 "$install_dir/public/storage/m/_v2/"* # users folders should be 770
  chmod 770 "$install_dir/public/storage/m/_v2/" # this should be 770
  chown -R :www-data "$install_dir/public/storage/m/_v2/" # Fix the mess following packaging v2 upgrade - and make sure proper group owner is set.
fi

#=================================================
# DEPLOYMENT
#=================================================
ynh_script_progression "Deploying..."

pushd "$install_dir"
	php$php_version artisan horizon:install
	php$php_version artisan horizon:publish
	php$php_version artisan passport:keys --force
	php$php_version artisan config:clear
	php$php_version artisan config:cache
	php$php_version artisan route:clear
	php$php_version artisan route:cache
	php$php_version artisan view:clear
	php$php_version artisan view:cache
	php$php_version artisan storage:link
	php$php_version artisan migrate --force
	php$php_version artisan update
	php$php_version artisan horizon:purge
	php$php_version artisan import:cities 2>/dev/null
	php$php_version artisan instance:actor
	php$php_version artisan passport:client --personal <<< "\\n"
popd

#=================================================
# CREATE LOG FILE
#=================================================
ynh_script_progression "Creating log file..."

mkdir -p "/var/log/$app/"
touch "/var/log/$app/${app}-horizon.log"
#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app: "/var/log/$app/"
#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R 600 "/var/log/$app/"

#=================================================
# UPGRADE THE CRON FILE
#=================================================
ynh_script_progression "Upgrading cron file..."

ynh_config_add --template="cron" --destination="/etc/cron.d/$app"

#=================================================
# SETUP SUPERVISOR
#=================================================
ynh_script_progression "Upgrading supervisor configuration..."

# Create a dedicated supervisor config
ynh_add_supervisor_config --service="${app}-horizon" --template=horizon.conf

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression "Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression "Integrating service in YunoHost..."

yunohost service add "supervisor" --description="Supervisor daemon for $app" --log="/var/log/$app/${app}-horizon.log"

#=================================================
# START SUPERVISOR SERVICE
#=================================================
ynh_script_progression "Starting a supervisor service..."

ynh_supervisor_action --service="${app}-horizon" --action="start" --log_path="systemd" --wait_until="success: ${app}-horizon"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
